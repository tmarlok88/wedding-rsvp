name: Release

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('test-requirements.txt') }}
    - name: node cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - id: setup_env
      uses: ./.github/actions/setup_env
    - name: personalize images
      run: |
        FILES=$(curl -s https://api.github.com/gists/a83d97a735a69cd7b2476fa10aea396f | jq -r '.files | keys[]')
        for fname in $FILES; do
          if [[ "${fname##*.}" == "jpg" ]]; then
            wget -N https://gist.github.com/${{ secrets.GIST_PATH }}/raw/${fname} -O app/static/img/${fname}
          fi
        done
    - name: personalize content
      run: wget -N https://gist.github.com/${{ secrets.GIST_PATH }}/raw/wedding-rsvp-personalize.yaml -O app/personalize/rsvp_content.yaml
    - name: deploy static content
      run: ./node_modules/serverless/bin/serverless.js client deploy --stage production --no-confirm
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
        RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
        USE_RECAPTCHA_FOR_GUEST: True
        USE_RECAPTCHA_FOR_ADMIN: True
        FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
        ADMIN_PASSWORD_HASH: ${{ secrets.ADMIN_PASSWORD_HASH }}
        WEB_DOMAIN: ${{ secrets.WEB_DOMAIN }}
        HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
        SENDER_EMAIL_ADDRESS: ${{ secrets.SENDER_EMAIL_ADDRESS }}
        PERSONALIZE_SRC_FILE: app/personalize/rsvp_content.yaml
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        LANGUAGE: hu
    - name: serverless deploy
      run: ./node_modules/serverless/bin/serverless.js deploy --stage production --skip-additionalstacks
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
        RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
        USE_RECAPTCHA_FOR_GUEST: True
        USE_RECAPTCHA_FOR_ADMIN: True
        FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
        ADMIN_PASSWORD_HASH: ${{ secrets.ADMIN_PASSWORD_HASH }}
        WEB_DOMAIN: ${{ secrets.WEB_DOMAIN }}
        HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
        SENDER_EMAIL_ADDRESS: ${{ secrets.SENDER_EMAIL_ADDRESS }}
        PERSONALIZE_SRC_FILE: app/personalize/rsvp_content.yaml
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        LANGUAGE: hu
