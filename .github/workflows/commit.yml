name: Caching

on: push

jobs:
  node_cache:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ./node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install Dependencies
      run: npm ci
    - run: npm install serverless

  python_cache:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
        pip install --upgrade --upgrade-strategy eager -r test-requirements
        pip install nose2
        pip install flake8

  unit_tests:
    needs: python_cache
    runs-on: ubuntu-20.04
    steps:
      - name: run unit tests
        run: nose2 --with-coverage --coverage ../../app/

  lint:
    needs: python_cache
    runs-on: ubuntu-20.04
    steps:
      - name: run unit tests
        run: flake8 --extend-ignore=E501 app/

  dev_deploy:
    if: startsWith(github.ref, 'refs/heads/feature/')
    needs:
    - lint
    - unit_tests
    runs-on: ubuntu-20.04
    steps:
    - name: deploy static content
      run: sls client deploy --no-confirm
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
        RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
        USE_RECAPTCHA_FOR_GUEST: True
        USE_RECAPTCHA_FOR_ADMIN: True
        FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
        ADMIN_PASSWORD_HASH: ${{ secrets.ADMIN_PASSWORD_HASH }}
        WEB_DOMAIN: ${{ secrets.WEB_DOMAIN }}
        HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
        SENDER_EMAIL_ADDRESS: ${{ secrets.SENDER_EMAIL_ADDRESS }}
        PERSONALIZE_SRC_FILE: app/personalize/rsvp_content.yaml
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
    - name: serverless deploy
      run: sls deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
        RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
        USE_RECAPTCHA_FOR_GUEST: True
        USE_RECAPTCHA_FOR_ADMIN: True
        FLASK_SECRET: ${{ secrets.FLASK_SECRET }}
        ADMIN_PASSWORD_HASH: ${{ secrets.ADMIN_PASSWORD_HASH }}
        WEB_DOMAIN: ${{ secrets.WEB_DOMAIN }}
        HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
        SENDER_EMAIL_ADDRESS: ${{ secrets.SENDER_EMAIL_ADDRESS }}
        PERSONALIZE_SRC_FILE: app/personalize/rsvp_content.yaml
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}